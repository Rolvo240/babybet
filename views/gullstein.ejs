<%- include('layout', { title: 'Gull eller Stein' }) %>

<style>
  /* Flytt stiler hit */
  .coin-button {
    transform: translateY(0);
    transition: all 0.3s ease;
  }
  .coin-button:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.2);
  }
  .message {
    animation: fadeIn 0.5s ease-in;
  }
  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(-10px); }
    to { opacity: 1; transform: translateY(0); }
  }
  /* Oppdater mynt/ikon stiler om nÃ¸dvendig, men kan gjenbruke */
  .coin {
    width: 150px;
    height: 150px;
    position: relative;
    transform-style: preserve-3d;
    transition: transform 1s;
  }
  .coin-front, .coin-back {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 4rem;
  }
  .coin-front {
    background: linear-gradient(45deg, #FFD700, #FFA500); /* Gull-aktig farge */
    transform: rotateY(180deg);
  }
  .coin-back {
    background: linear-gradient(45deg, #C0C0C0, #808080); /* Stein/GrÃ¥-aktig farge */
  }
  .flipping {
    animation: flip 1s ease-in-out;
  }
  @keyframes flip {
    0% { transform: rotateY(0); }
    100% { transform: rotateY(1800deg); }
  }
  .win-message {
    animation: bounce 0.5s ease infinite;
  }
  @keyframes bounce {
    0%, 100% { transform: translateY(0); }
    50% { transform: translateY(-10px); }
  }
  .game-button {
    padding: 1rem 1.5rem;
    border-radius: 0.5rem;
    font-size: 1.1rem;
    font-weight: bold;
    transition: background 0.2s, transform 0.1s;
    min-width: 120px;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
  }
  button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  .outcome-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
  }
  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    75% { transform: translateX(10px); }
  }
</style>

<div class="bg-gradient-to-br from-yellow-900 via-orange-900 to-yellow-900 text-white min-h-screen p-6 flex flex-col items-center justify-center">
  <div class="max-w-xl mx-auto text-center">
    <div class="flex justify-between items-center mb-8">
      <a href="/casino/<%= typeof userId !== 'undefined' ? userId : '' %>" class="bg-white/10 hover:bg-white/20 p-3 rounded-full transition flex items-center justify-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
      </a>
      <h1 class="text-4xl font-extrabold text-center">âœ¨ Gull eller Stein</h1>
      <div class="w-10"></div>
    </div>

    <div class="bg-white/10 backdrop-blur-lg rounded-2xl p-6 mb-8">
      <p class="text-center text-2xl mb-2">Din Saldo</p>
      <p class="text-center text-4xl font-bold"><%= typeof balance !== 'undefined' ? balance : 0 %> ðŸª™</p>
    </div>

    <% if (typeof message !== 'undefined' && message) { %>
      <% let isWin = message.includes('vant') || message.includes('vant'); %>
      <div class="message bg-white/10 backdrop-blur-lg rounded-xl p-4 mb-8 text-center text-xl <%= isWin ? 'win-message' : '' %>">
        <%= message %>
      </div>
    <% } %>

    <div id="outcome-display">
      <% if (typeof message !== 'undefined' && message) { %>
        <div class="outcome-icon">
          <% if (message.includes('vant')) { %>
            <%= "âœ¨" %>
          <% } else { %>
            <%= message.includes('tapte') || message.includes('TOTALT TAP') ? "ðŸŒ‘" : "ðŸª™" %>
          <% } %>
        </div>
      <% } else { %>
        <div id="coin" class="coin mx-auto mb-8">
          <div class="coin-front">âœ¨</div>
          <div class="coin-back">ðŸŒ‘</div>
        </div>
      <% } %>
    </div>


    <% const canBetCoinflip = (typeof balance !== 'undefined' ? balance : 0) >= 50; %>

    <form method="POST" class="flex justify-center gap-4" id="betForm">
      <input type="hidden" name="userId" value="<%= typeof userId !== 'undefined' ? userId : '' %>">
      <button type="submit" name="guess" value="gull"
              class="game-button bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-600 hover:to-yellow-700 text-gray-900 flex"
              <%= canBetCoinflip ? '' : 'disabled' %>>
        âœ¨ Gull
      </button>
      <button type="submit" name="guess" value="stein"
              class="game-button bg-gradient-to-r from-gray-600 to-gray-700 hover:from-gray-700 hover:to-gray-800 text-white flex"
               <%= canBetCoinflip ? '' : 'disabled' %>>
        ðŸŒ‘ Stein
      </button>
    </form>
  </div>

  <audio id="flipSound" src="https://assets.mixkit.co/sfx/preview/mixkit-coin-win-notification-1992.mp3"></audio>
  <audio id="winSound" src="https://assets.mixkit.co/sfx/preview/mixkit-winning-chimes-2015.mp3"></audio>
  <audio id="loseSound" src="https://assets.mixkit.co/sfx/preview/mixkit-failure-arcade-sound-2008.mp3"></audio>


  <script>
    const betForm = document.getElementById('betForm');
    const coin = document.getElementById('coin');
    const outcomeDisplay = document.getElementById('outcome-display');
    const flipSound = document.getElementById('flipSound');
    const winSound = document.getElementById('winSound');
    const loseSound = document.getElementById('loseSound');

    function handleOutcomeFeedback() {
        const currentMessageEl = document.querySelector('.message');
        if (currentMessageEl) {
            const messageText = currentMessageEl.textContent;
            if (messageText.includes('vant')) {
                if (winSound) winSound.play();
                confetti({ particleCount: 100, spread: 70, origin: { y: 0.6 } });
            } else if (messageText.includes('tapte') || messageText.includes('TOTALT TAP')) {
                if (loseSound) loseSound.play();
            }
        }
    }


    betForm.addEventListener('submit', function(event) {
        event.preventDefault();

        betForm.querySelectorAll('button').forEach(button => button.disabled = true);

        if(outcomeDisplay) {
          outcomeDisplay.innerHTML = `
            <div id="coin" class="coin mx-auto mb-8">
              <div class="coin-front">âœ¨</div>
              <div class="coin-back">ðŸŒ‘</div>
            </div>
          `;
          const currentCoin = document.getElementById('coin');
           if (currentCoin) {
             currentCoin.classList.add('flipping');
           }
        }

        if (flipSound) flipSound.play();


        setTimeout(() => {
            const formData = new FormData(betForm);

            fetch(betForm.action, {
                method: 'POST',
                body: new URLSearchParams(formData)
            })
            .then(response => response.text())
            .then(html => {
                document.open();
                document.write(html);
                document.close();

                handleOutcomeFeedback();

            })
            .catch(error => {
                console.error('Feil ved tipping:', error);
                alert('Klarte ikke tippe. PrÃ¸v igjen.');
                betForm.querySelectorAll('button').forEach(button => button.disabled = false);
            });
        }, 1000);

    });

    handleOutcomeFeedback();

  </script> 